diff a/manifests/kustomize/README.md b/manifests/kustomize/README.md	(rejected hunks)
@@ -1,70 +1,58 @@
-# Kubeflow Pipelines Kustomize Manifest Folder
+# Install Kubeflow Pipelines Standalone using Kustomize Manifests
 
-## Install Kubeflow Pipelines
+This folder contains [Kubeflow Pipelines Standalone](https://www.kubeflow.org/docs/components/pipelines/installation/standalone-deployment/) 
+Kustomize manifests.
 
-This folder contains Kubeflow Pipelines Kustomize manifests for a light weight
-deployment. You can follow the instruction and deploy Kubeflow Pipelines in an
-existing cluster.
+Kubeflow Pipelines Standalone is one option to install Kubeflow Pipelines. You can review all other options in
+[Installation Options for Kubeflow Pipelines](https://www.kubeflow.org/docs/components/pipelines/installation/overview/).
 
-To install Kubeflow Pipelines, you have several options.
+## Install options for different envs
 
-- Via [GCP AI Platform UI](http://console.cloud.google.com/ai-platform/pipelines).
-- Via an upcoming commandline tool.
-- Via Kubectl with Kustomize, it's detailed here.
+To install Kubeflow Pipelines Standalone, follow [Kubeflow Pipelines Standalone Deployment documentation](https://www.kubeflow.org/docs/components/pipelines/installation/standalone-deployment/).
 
-### Install via Kustomize
+There are environment specific installation instructions not covered in the official deployment documentation, they are listed below.
 
-Deploy latest version of Kubeflow Pipelines.
+### (env/platform-agnostic) install on any Kubernetes cluster
 
-It uses following default settings.
-
-- image: latest released images
-- namespace: kubeflow
-- application name: pipeline
-
-#### Option-1 Install it to any K8s cluster
-
-It's based on in-cluster PersistentVolumeClaim storage.
+Install:
 
 ```bash
+KFP_ENV=platform-agnostic
 kubectl apply -k cluster-scoped-resources/
 kubectl wait crd/applications.app.k8s.io --for condition=established --timeout=60s
-kubectl apply -k env/platform-agnostic/
+kubectl apply -k "env/${KFP_ENV}/"
 kubectl wait pods -l application-crd-id=kubeflow-pipelines -n kubeflow --for condition=Ready --timeout=1800s
 kubectl port-forward -n kubeflow svc/ml-pipeline-ui 8080:80
 ```
 
-Now you can access it via localhost:8080
+Now you can access Kubeflow Pipelines UI in your browser by <http://localhost:8080>.
 
-#### Option-2 Install it to GCP with in-cluster PersistentVolumeClaim storage
+Customize:
 
-It's based on in-cluster PersistentVolumeClaim storage.
-Additionally, it introduced a proxy in GCP to allow user easily access KFP safely.
+There are two variations for platform-agnostic that uses different [argo workflow executors](https://argoproj.github.io/argo-workflows/workflow-executors/):
 
-```bash
-kubectl apply -k cluster-scoped-resources/
-kubectl wait crd/applications.app.k8s.io --for condition=established --timeout=60s
+* env/platform-agnostic-emissary
+* env/platform-agnostic-pns
 
-kubectl apply -k env/dev/
-kubectl wait applications/pipeline -n kubeflow --for condition=Ready --timeout=1800s
+You can install them by changing `KFP_ENV` in above instructions to the variation you want.
 
-# Or visit http://console.cloud.google.com/ai-platform/pipelines
-kubectl describe configmap inverse-proxy-config -n kubeflow | grep googleusercontent.com
-```
+Data:
+
+Application data are persisted in in-cluster PersistentVolumeClaim storage.
 
-#### Option-3 Install it to GCP with CloudSQL & GCS-Minio managed storage
+### (env/gcp) install on Google Cloud with Cloud Storage and Cloud SQL
 
-Its storage is based on CloudSQL & GCS. It's better than others for production usage.
+Cloud Storage and Cloud SQL are better for operating a production cluster.
 
-Please following [sample](sample/README.md) for a customized installation.
+Refer to [Google Cloud Instructions](sample/README.md) for installation.
 
-#### Option-4 Install it to AWS with S3 and RDS MySQL
+### (env/aws) install on AWS with S3 and RDS MySQL
 
-Its storage is based on S3 & AWS RDS. It's more natural for AWS users to use this option.
+S3 and RDS MySQL are better for operating a production cluster.
 
-Please following [AWS Instructions](env/aws/README.md) for installation.
+Refer to [AWS Instructions](env/aws/README.md) for installation.
 
-Note: Community maintains a repo [e2fyi/kubeflow-aws](https://github.com/e2fyi/kubeflow-aws/tree/master/pipelines) for AWS.
+Note: Community maintains a different opinionated installation manifests for AWS, refer to [e2fyi/kubeflow-aws](https://github.com/e2fyi/kubeflow-aws/tree/master/pipelines).
 
 ## Uninstall
 
