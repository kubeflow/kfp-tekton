# Copyright 2021 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: double-recursion-test
  annotations:
    tekton.dev/output_artifacts: '{}'
    tekton.dev/input_artifacts: '{"print": [{"name": "condition-cel-3-outcome", "parent_task":
      "condition-cel-3"}, {"name": "condition-cel-outcome", "parent_task": "condition-cel"}]}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"print": []}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"default": "[3, 1, 4, 9, 2]",
      "name": "array", "optional": true, "type": "typing.List[int]"}], "name": "double-recursion
      test"}'
spec:
  params:
  - name: array
    value: '[3, 1, 4, 9, 2]'
  pipelineSpec:
    params:
    - name: array
      default: '[3, 1, 4, 9, 2]'
    tasks:
    - name: condition-cel
      params:
      - name: outcome
        value: '0'
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
    - name: condition-cel-2
      params:
      - name: outcome
        value: $(tasks.condition-cel.results.outcome) < size( $(params.array) )
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
    - name: double-recursion-test-graph-recur-a-2
      taskRef:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: PipelineLoop
        name: double-recursion-test-graph-recur-a-2
      params:
      - name: array
        value: $(params.array)
      - name: condition-cel-2-outcome
        value: $(tasks.condition-cel-2.results.outcome)
      - name: condition-cel-outcome
        value: $(tasks.condition-cel.results.outcome)
      - name: just_one_iteration
        value:
        - '1'
      when:
      - input: $(tasks.condition-cel-2.results.outcome)
        operator: in
        values:
        - "true"
  timeout: 0s
