# Copyright 2020 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    pipelines.kubeflow.org/pipeline-sdk-type: kfp
  name: component-with-inline-input-artifact
spec:
  stepTemplate:
    volumeMounts:
    - mountPath: /tmp/inputs/text
      name: text
  steps:
  - image: busybox
    name: copy-inputs
    script: '#!/bin/sh

      set -exo pipefail

      echo -n "Constant artifact value" > /tmp/inputs/text/data

      '
  - command:
    - cat
    - /tmp/inputs/text/data
    image: alpine
    name: main
  volumes:
  - emptyDir: {}
    name: text
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    pipelines.kubeflow.org/pipeline-sdk-type: kfp
  name: component-with-input-artifact
spec:
  stepTemplate:
    volumeMounts:
    - mountPath: /tmp/inputs/text
      name: text
  steps:
  - image: busybox
    name: copy-inputs
    script: '#!/bin/sh

      set -exo pipefail

      echo -n "Constant artifact value" > /tmp/inputs/text/data

      '
  - command:
    - cat
    - /tmp/inputs/text/data
    image: alpine
    name: main
  volumes:
  - emptyDir: {}
    name: text
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    pipelines.kubeflow.org/pipeline-sdk-type: kfp
  name: component-with-input-artifact-2
spec:
  stepTemplate:
    volumeMounts:
    - mountPath: /tmp/inputs/text
      name: text
  steps:
  - image: busybox
    name: copy-inputs
    script: '#!/bin/sh

      set -exo pipefail

      echo -n "hard-coded artifact value" > /tmp/inputs/text/data

      '
  - command:
    - cat
    - /tmp/inputs/text/data
    image: alpine
    name: main
  volumes:
  - emptyDir: {}
    name: text
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    pipelines.kubeflow.org/pipeline-sdk-type: kfp
  name: component-with-input-artifact-3
spec:
  stepTemplate:
    volumeMounts:
    - mountPath: /tmp/inputs/text
      name: text
  steps:
  - image: busybox
    name: copy-inputs
    script: '#!/bin/sh

      set -exo pipefail

      echo -n "Text from a file with hard-coded artifact value

      " > /tmp/inputs/text/data

      '
  - command:
    - cat
    - /tmp/inputs/text/data
    image: alpine
    name: main
  volumes:
  - emptyDir: {}
    name: text
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Pipeline shows how to
      define artifact inputs and pass raw artifacts to them.", "name": "Pipeline with
      artifact input raw argument value."}'
    sidecar.istio.io/inject: 'false'
  name: pipeline-with-artifact-input-raw-argument-value
spec:
  tasks:
  - name: component-with-inline-input-artifact
    taskRef:
      name: component-with-inline-input-artifact
  - name: component-with-input-artifact
    taskRef:
      name: component-with-input-artifact
  - name: component-with-input-artifact-2
    taskRef:
      name: component-with-input-artifact-2
  - name: component-with-input-artifact-3
    taskRef:
      name: component-with-input-artifact-3
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    tekton.dev/input_artifacts: '{}'
    tekton.dev/output_artifacts: '{}'
  name: pipeline-with-artifact-input-raw-argument-value-run
spec:
  pipelineRef:
    name: pipeline-with-artifact-input-raw-argument-value
