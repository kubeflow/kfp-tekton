# Copyright 2020 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Downloads a message and
      prints it. The exit handler will run after the pipeline finishes (successfully
      or not).", "inputs": [{"default": "gs://ml-pipeline-playground/shakespeare1.txt",
      "name": "url", "optional": true}], "name": "Exit Handler"}'
    sidecar.istio.io/inject: 'false'
    tekton.dev/input_artifacts: '{"echo-2": [{"name": "gcs-download-data", "parent_task":
      "gcs-download"}]}'
    tekton.dev/output_artifacts: '{"gcs-download": [{"name": "gcs-download-data",
      "path": "/tmp/results.txt"}]}'
  name: exit-handler
spec:
  params:
  - name: url
    value: gs://ml-pipeline-playground/shakespeare1.txt
  pipelineSpec:
    finally:
    - name: echo
      taskSpec:
        steps:
        - args:
          - echo "$0"
          - exit!
          command:
          - sh
          - -c
          image: library/bash:4.4.23
          name: main
    params:
    - default: gs://ml-pipeline-playground/shakespeare1.txt
      name: url
    tasks:
    - name: gcs-download
      params:
      - name: url
        value: $(params.url)
      taskSpec:
        params:
        - name: url
        results:
        - description: /tmp/results.txt
          name: data
        steps:
        - args:
          - gsutil cat $0 | tee $1
          - $(inputs.params.url)
          - $(results.data.path)
          command:
          - sh
          - -c
          image: google/cloud-sdk:279.0.0
          name: main
        - env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
          - name: PIPELINETASK
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineTask']
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: accesskey
                name: mlpipeline-minio-artifact
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: secretkey
                name: mlpipeline-minio-artifact
          image: minio/mc
          name: copy-artifacts
          script: '#!/usr/bin/env sh

            mc config host add storage http://minio-service.$NAMESPACE:9000 $AWS_ACCESS_KEY_ID
            $AWS_SECRET_ACCESS_KEY

            tar -cvzf data.tgz $(results.data.path)

            mc cp data.tgz storage/mlpipeline/artifacts/$PIPELINERUN/$PIPELINETASK/data.tgz

            '
    - name: echo-2
      params:
      - name: gcs-download-data
        value: $(tasks.gcs-download.results.data)
      taskSpec:
        params:
        - name: gcs-download-data
        steps:
        - args:
          - echo "$0"
          - $(inputs.params.gcs-download-data)
          command:
          - sh
          - -c
          image: library/bash:4.4.23
          name: main
