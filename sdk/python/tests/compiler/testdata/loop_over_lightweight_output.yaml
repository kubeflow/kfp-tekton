# Copyright 2021 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: loop-over-lightweight-output
  annotations:
    tekton.dev/output_artifacts: '{"produce-list": [{"key": "artifacts/$PIPELINERUN/produce-list/data_list.tgz",
      "name": "produce-list-data_list", "path": "/tmp/outputs/data_list/data"}]}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"consume-data": [], "produce-list": [["data_list",
      "$(results.data-list.path)"]]}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Test pipeline to verify
      functions of par loop.", "name": "Loop over lightweight output"}'
spec:
  pipelineSpec:
    tasks:
    - name: produce-list
      taskSpec:
        steps:
        - name: main
          command: [sh, -c, 'echo "[1, 2, 3]" > "$0"', $(results.data-list.path)]
          image: busybox
        results:
        - {name: data-list, description: /tmp/outputs/data_list/data}
        metadata:
          annotations: {pipelines.kubeflow.org/component_spec: '{"implementation":
              {"container": {"command": ["sh", "-c", "echo \"[1, 2, 3]\" > \"$0\"",
              {"outputPath": "data_list"}], "image": "busybox"}}, "name": "Produce
              list", "outputs": [{"name": "data_list"}]}'}
      timeout: 0s
    - runAfter: [produce-list]
      name: for-loop-for-loop-00000001-1
      taskRef: {apiVersion: custom.tekton.dev/v1alpha1, kind: PipelineLoop, name: for-loop-for-loop-00000001-1}
      params:
      - {name: produce-list-data_list-loop-item, value: $(tasks.produce-list.results.data-list)}
  timeout: 0s
