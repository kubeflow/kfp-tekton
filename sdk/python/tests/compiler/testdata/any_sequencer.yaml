# Copyright 2021 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: any-sequencer
  annotations:
    tekton.dev/output_artifacts: '{"any-test": [{"key": "artifacts/$PIPELINERUN/any-test/status.tgz",
      "name": "any-test-status", "path": "/tmp/outputs/status/data"}], "flip-coin":
      [{"key": "artifacts/$PIPELINERUN/flip-coin/Output.tgz", "name": "flip-coin-Output",
      "path": "/tmp/outputs/Output/data"}]}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"any-test": [["status", "$(results.status.path)"]],
      "flip-coin": [["Output", "$(results.output.path)"]], "sleepcomponent": [], "sleepcomponent-2":
      [], "sleepcomponent-3": [], "sleepcomponent-4": []}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/big_data_passing_format: $(workspaces.$TASK_NAME.path)/artifacts/$ORIG_PR_NAME/$TASKRUN_NAME/$TASK_PARAM_NAME
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Any Sequencer Component
      Demo", "name": "any-sequencer"}'
spec:
  pipelineSpec:
    tasks:
    - name: sleepcomponent
      taskSpec:
        steps:
        - name: main
          args:
          - '15'
          command:
          - sleep
          image: alpine:latest
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "sleepComponent",
              "outputs": [], "version": "sleepComponent@sha256=a885c0df4b9597faab0f119871ba6935f574cbd2b7232dcfa0d7602bffc9e223"}'
            tekton.dev/template: ''
      timeout: 525600m
    - name: sleepcomponent-2
      taskSpec:
        steps:
        - name: main
          args:
          - '200'
          command:
          - sleep
          image: alpine:latest
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "sleepComponent",
              "outputs": [], "version": "sleepComponent@sha256=a885c0df4b9597faab0f119871ba6935f574cbd2b7232dcfa0d7602bffc9e223"}'
            tekton.dev/template: ''
      timeout: 525600m
    - name: sleepcomponent-3
      taskSpec:
        steps:
        - name: main
          args:
          - '300'
          command:
          - sleep
          image: alpine:latest
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "sleepComponent",
              "outputs": [], "version": "sleepComponent@sha256=a885c0df4b9597faab0f119871ba6935f574cbd2b7232dcfa0d7602bffc9e223"}'
            tekton.dev/template: ''
      timeout: 525600m
    - name: flip-coin
      taskSpec:
        steps:
        - name: main
          args:
          - '----output-paths'
          - $(results.output.path)
          command:
          - sh
          - -ec
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def flip_coin():
                """Flip a coin and output heads or tails randomly."""
                import random
                result = 'heads' if random.randint(0, 1) == 0 else 'tails'
                print(result)
                return result

            def _serialize_str(str_value: str) -> str:
                if not isinstance(str_value, str):
                    raise TypeError('Value "{}" has type "{}" instead of str.'.format(str(str_value), str(type(str_value))))
                return str_value

            import argparse
            _parser = argparse.ArgumentParser(prog='Flip coin', description='Flip a coin and output heads or tails randomly.')
            _parser.add_argument("----output-paths", dest="_output_paths", type=str, nargs=1)
            _parsed_args = vars(_parser.parse_args())
            _output_files = _parsed_args.pop("_output_paths", [])

            _outputs = flip_coin(**_parsed_args)

            _outputs = [_outputs]

            _output_serializers = [
                _serialize_str,

            ]

            import os
            for idx, output_file in enumerate(_output_files):
                try:
                    os.makedirs(os.path.dirname(output_file))
                except OSError:
                    pass
                with open(output_file, 'w') as f:
                    f.write(_output_serializers[idx](_outputs[idx]))
          image: python:alpine3.6
        results:
        - name: output
          description: /tmp/outputs/Output/data
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "Flip coin", "outputs":
              [{"name": "Output", "type": "String"}], "version": "Flip coin@sha256=7eec77b07107adacc26d8ec075f6f2a62ca3e7f9ecc4110ce2724c964df4501d"}'
            tekton.dev/template: ''
      runAfter:
      - sleepcomponent
      timeout: 525600m
    - name: sleepcomponent-4
      taskSpec:
        steps:
        - name: main
          args:
          - '30'
          command:
          - sleep
          image: alpine:latest
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "sleepComponent",
              "outputs": [], "version": "sleepComponent@sha256=a885c0df4b9597faab0f119871ba6935f574cbd2b7232dcfa0d7602bffc9e223"}'
            tekton.dev/template: ''
      runAfter:
      - any-test
      timeout: 525600m
    - name: any-test
      taskSpec:
        steps:
        - name: main
          args:
          - --namespace
          - $(params.pipelineRun-namespace)
          - --prName
          - $(params.pipelineRun-name)
          - --taskList
          - sleepcomponent-2,sleepcomponent-3
          - --statusPath
          - $(results.status.path)
          - -c
          - results_flip-coin_output == 'heads'
          command:
          - any-task
          image: dspipelines/any-sequencer:latest
        results:
        - name: status
          description: /tmp/outputs/status/data
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "any_test", "outputs":
              [{"description": "The output file to create the status", "name": "status"}],
              "version": "any_test@sha256=03b2b97be43cc77f2df70fd915a8fcd2e061341d7904af268cb4b2a4bbd86a76"}'
            tekton.dev/template: ''
        params:
        - name: pipelineRun-name
        - name: pipelineRun-namespace
      timeout: 525600m
      params:
      - name: pipelineRun-name
        value: $(context.pipelineRun.name)
      - name: pipelineRun-namespace
        value: $(context.pipelineRun.namespace)
  timeout: 525600m
