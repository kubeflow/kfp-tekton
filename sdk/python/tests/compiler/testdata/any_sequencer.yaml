apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: any-sequencer
  annotations:
    tekton.dev/output_artifacts: '{"any-test": [{"key": "artifacts/$PIPELINERUN/any-test/status.tgz",
      "name": "any-test-status", "path": "/tekton/results/status/status"}], "flipcoin":
      [{"key": "artifacts/$PIPELINERUN/flipcoin/output.tgz", "name": "flipcoin-output",
      "path": "/tmp/output"}]}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"any-test": [["status", "$(results.status.path)"]],
      "flipcoin": [["output", "$(results.output.path)"]], "task1": [], "task2": [],
      "task3": [], "task4": []}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Any Sequencer Component
      Demo", "name": "Any Sequencer"}'
spec:
  pipelineSpec:
    tasks:
    - name: task1
      taskSpec:
        steps:
        - name: main
          args:
          - sleep 15
          command:
          - /bin/bash
          - -c
          image: registry.access.redhat.com/ubi8/ubi-minimal
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      timeout: 0s
    - name: task2
      taskSpec:
        steps:
        - name: main
          args:
          - sleep 200
          command:
          - /bin/bash
          - -c
          image: registry.access.redhat.com/ubi8/ubi-minimal
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      timeout: 0s
    - name: task3
      taskSpec:
        steps:
        - name: main
          args:
          - sleep 300
          command:
          - /bin/bash
          - -c
          image: registry.access.redhat.com/ubi8/ubi-minimal
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      timeout: 0s
    - name: flipcoin
      taskSpec:
        steps:
        - name: main
          args:
          - python -c "import random; result = 'heads' if random.randint(0,1) == 0
            else 'tails'; print(result)" | tee $(results.output.path)
          command:
          - sh
          - -c
          image: python:alpine3.6
        results:
        - name: output
          description: /tmp/output
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - task1
      timeout: 0s
    - name: task4
      taskSpec:
        steps:
        - name: main
          args:
          - sleep 30
          command:
          - /bin/bash
          - -c
          image: registry.access.redhat.com/ubi8/ubi-minimal
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - any-test
      timeout: 0s
    - name: any-test
      taskSpec:
        steps:
        - name: main
          args:
          - --namespace
          - $(params.pipelineRun-namespace)
          - --prName
          - $(params.pipelineRun-name)
          - --taskList
          - task2,task3
          - --statusPath
          - $(results.status.path)
          - -c
          - results_flipcoin_output == 'heads'
          command:
          - any-task
          image: dspipelines/any-sequencer:latest
        results:
        - name: status
          description: /tekton/results/status/status
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec: '{"description": "Proceed when
              any of the dependents completed successfully", "implementation": {"container":
              {"args": ["--namespace", "$(context.pipelineRun.namespace)", "--prName",
              "$(context.pipelineRun.name)", "--taskList", "task2,task3", "--statusPath",
              {"outputPath": "status"}, "-c", "results_flipcoin_output == ''heads''"],
              "command": ["any-task"], "image": "dspipelines/any-sequencer:latest"}},
              "name": "any_test", "outputs": [{"description": "The output file to
              create the status", "name": "status"}]}'
            tekton.dev/template: ''
        params:
        - name: pipelineRun-name
        - name: pipelineRun-namespace
      timeout: 0s
      params:
      - name: pipelineRun-name
        value: $(context.pipelineRun.name)
      - name: pipelineRun-namespace
        value: $(context.pipelineRun.namespace)
  timeout: 0s
