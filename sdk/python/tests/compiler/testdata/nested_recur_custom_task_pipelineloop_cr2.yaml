# Copyright 2021 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: custom.tekton.dev/v1alpha1
kind: PipelineLoop
metadata:
  name: double-recursion-test-graph-recur-b-4
spec:
  pipelineSpec:
    params:
    - name: just_one_iteration
      type: string
    - name: condition-cel-2-outcome
      type: string
    - name: condition-cel-3-outcome
      type: string
    - name: condition-cel-outcome
      type: string
    - name: condition-cel-4-outcome
      type: string
    - name: condition-cel-5-outcome
      type: string
    tasks:
    - name: print
      params:
      - name: condition-cel-3-outcome
        value: $(params.condition-cel-3-outcome)
      - name: condition-cel-outcome
        value: $(params.condition-cel-outcome)
      taskSpec:
        steps:
        - name: main
          command:
          - echo
          - 'Iter A: $(inputs.params.condition-cel-outcome), B: $(inputs.params.condition-cel-3-outcome)'
          image: alpine:3.6
        params:
        - name: condition-cel-3-outcome
          type: string
        - name: condition-cel-outcome
          type: string
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
              {"command": ["echo", {"inputValue": "msg"}], "image": "alpine:3.6"}},
              "inputs": [{"name": "msg"}], "name": "print", "outputs": [{"name": "stdout"}]}'
            tekton.dev/template: ''
      timeout: 0s
    - name: condition-cel-6
      params:
      - name: outcome
        value: $(params.condition-cel-3-outcome) + 1
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
      runAfter:
      - print
    - name: condition-cel-7
      params:
      - name: outcome
        value: $(tasks.condition-cel-6.results.outcome) < $(params.condition-cel-4-outcome)
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
    - name: recur-b
      taskRef:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: PipelineLoop
        name: double-recursion-test-graph-recur-b-4
      params:
      - name: just_one_iteration
        value:
        - '1'
      - name: condition-cel-3-outcome
        value: $(tasks.condition-cel-6.results.outcome)
      - name: condition-cel-4-outcome
        value: $(params.condition-cel-4-outcome)
      - name: condition-cel-2-outcome
        value: $(params.condition-cel-2-outcome)
      - name: condition-cel-outcome
        value: $(params.condition-cel-outcome)
      - name: condition-cel-5-outcome
        value: $(params.condition-cel-5-outcome)
      when:
      - input: $(tasks.condition-cel-7.results.outcome)
        operator: in
        values:
        - "true"
  iterateParam: just_one_iteration
