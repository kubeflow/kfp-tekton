# Copyright 2020 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Shows how to use dsl.Condition.",
      "name": "Flip Coin Example Pipeline"}'
    sidecar.istio.io/inject: 'false'
  name: flip-coin-example-pipeline-run
spec:
  params: []
  pipelineSpec:
    params: []
    tasks:
    - name: flip
      params: []
      taskSpec:
        params: []
        results:
        - description: /tmp/output
          name: output
        steps:
        - args:
          - python -c "import random; result = 'heads' if random.randint(0,1) == 0
            else 'tails'; print(result)" | tee $(results.output.path)
          command:
          - sh
          - -c
          image: python:alpine3.6
          name: main
    - conditions:
      - conditionRef: condition-1
        params:
        - name: flip
          value: $(tasks.flip.results.output)
      name: flip-again
      params: []
      taskSpec:
        params: []
        results:
        - description: /tmp/output
          name: output
        steps:
        - args:
          - python -c "import random; result = 'heads' if random.randint(0,1) == 0
            else 'tails'; print(result)" | tee $(results.output.path)
          command:
          - sh
          - -c
          image: python:alpine3.6
          name: main
    - conditions:
      - conditionRef: condition-2
        params:
        - name: flip-again
          value: $(tasks.flip-again.results.output)
      - conditionRef: condition-1
        params:
        - name: flip
          value: $(tasks.flip.results.output)
      name: print1
      params:
      - name: flip-again-output
        value: $(tasks.flip-again.results.output)
      taskSpec:
        params:
        - name: flip-again-output
        results: []
        steps:
        - command:
          - echo
          - $(inputs.params.flip-again-output)
          image: alpine:3.6
          name: main
    - conditions:
      - conditionRef: condition-3
        params:
        - name: flip
          value: $(tasks.flip.results.output)
      name: print2
      params:
      - name: flip-again-output
        value: $(tasks.flip-again.results.output)
      taskSpec:
        params:
        - name: flip-again-output
        results: []
        steps:
        - command:
          - echo
          - $(inputs.params.flip-again-output)
          image: alpine:3.6
          name: main
