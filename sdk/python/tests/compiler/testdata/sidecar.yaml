# Copyright 2020 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A pipeline with sidecars.",
      "name": "Sidecar"}'
    sidecar.istio.io/inject: 'false'
    tekton.dev/input_artifacts: '{"echo": [{"name": "download-downloaded", "parent_task":
      "download"}]}'
    tekton.dev/output_artifacts: '{"download": [{"name": "download-downloaded", "path":
      "/tmp/results.txt"}]}'
  name: sidecar
spec:
  pipelineSpec:
    tasks:
    - name: download
      taskSpec:
        results:
        - description: /tmp/results.txt
          name: downloaded
        sidecars:
        - args:
          - -text="hello world"
          image: hashicorp/http-echo
          name: echo
        steps:
        - args:
          - sleep 10; wget localhost:5678 -O $(results.downloaded.path)
          command:
          - sh
          - -c
          image: busybox
          name: main
        - env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
          - name: PIPELINETASK
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineTask']
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: accesskey
                name: mlpipeline-minio-artifact
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: secretkey
                name: mlpipeline-minio-artifact
          image: minio/mc
          name: copy-artifacts
          script: '#!/usr/bin/env sh

            mc config host add storage http://minio-service.$NAMESPACE:9000 $AWS_ACCESS_KEY_ID
            $AWS_SECRET_ACCESS_KEY

            tar -cvzf downloaded.tgz $(results.downloaded.path)

            mc cp downloaded.tgz storage/mlpipeline/artifacts/$PIPELINERUN/$PIPELINETASK/downloaded.tgz

            '
    - name: echo
      params:
      - name: download-downloaded
        value: $(tasks.download.results.downloaded)
      taskSpec:
        params:
        - name: download-downloaded
        steps:
        - args:
          - echo $(inputs.params.download-downloaded)
          command:
          - sh
          - -c
          image: library/bash
          name: main
