# Copyright 2020 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Get Most Frequent Word
      and Save to GCS", "inputs": [{"default": "When flies fly behind flies, then
      flies are following flies.", "name": "message", "optional": true}], "name":
      "Save Most Frequent"}'
    sidecar.istio.io/inject: 'false'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/output_artifacts: '{"get-frequent": [{"name": "get-frequent-word",
      "path": "/tmp/message.txt"}]}'
  name: save-most-frequent
spec:
  params:
  - name: message
    value: When flies fly behind flies, then flies are following flies.
  pipelineSpec:
    params:
    - default: When flies fly behind flies, then flies are following flies.
      name: message
    tasks:
    - name: get-frequent
      params:
      - name: message
        value: $(params.message)
      taskSpec:
        params:
        - name: message
        results:
        - description: /tmp/message.txt
          name: word
        steps:
        - args:
          - 'python -c "from collections import Counter; text = ''$(inputs.params.message)'';
            print(''Input: '' + text); words = Counter(text.split()); print(''Most
            frequent word: '' + str(max(words, key=words.get)))" | tee $(results.word.path)'
          command:
          - sh
          - -c
          image: python:3.5-jessie
          name: main
        - env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
          - name: PIPELINETASK
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineTask']
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: accesskey
                name: mlpipeline-minio-artifact
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: secretkey
                name: mlpipeline-minio-artifact
          image: minio/mc
          name: copy-artifacts
          script: '#!/usr/bin/env sh

            mc config host add storage http://minio-service.$NAMESPACE:9000 $AWS_ACCESS_KEY_ID
            $AWS_SECRET_ACCESS_KEY

            tar -cvzf word.tgz $(results.word.path)

            mc cp word.tgz storage/mlpipeline/artifacts/$PIPELINERUN/$PIPELINETASK/word.tgz

            '
  podTemplate:
    imagePullSecrets:
    - name: secretA
