# Copyright 2021 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: volumesnapshotop-sequential
  annotations:
    tekton.dev/output_artifacts: '{}'
    tekton.dev/input_artifacts: '{"step1-ingest": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step1-snap": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step2-gunzip": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step2-snap": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step3-copy": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step3-snap": [{"name": "create-volume-name",
      "parent_task": "create-volume"}], "step4-output": [{"name": "create-volume-name",
      "parent_task": "create-volume"}]}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"create-volume": [], "step1-ingest": [], "step1-snap":
      [], "step2-gunzip": [], "step2-snap": [], "step3-copy": [], "step3-snap": [],
      "step4-output": []}'
    sidecar.istio.io/inject: "false"
    pipelines.kubeflow.org/pipeline_spec: '{"description": "The fourth example of
      the design doc. Please enable the\n    volume snapshot feature gate in order
      to run this pipeline.", "inputs": [{"name": "url"}], "name": "VolumeSnapshotOp
      Sequential"}'
spec:
  params:
  - name: url
    value: ''
  pipelineSpec:
    params:
    - name: url
    tasks:
    - name: create-volume
      params:
      - name: action
        value: create
      - name: output
        value: |
          - name: manifest
            valueFrom: '{}'
          - name: name
            valueFrom: '{.metadata.name}'
          - name: size
            valueFrom: '{.status.capacity.storage}'
      - name: set-ownerreference
        value: "false"
      taskSpec:
        params:
        - description: Action on the resource
          name: action
          type: string
        - default: strategic
          description: Merge strategy when using action patch
          name: merge-strategy
          type: string
        - default: ''
          description: An express to retrieval data from resource.
          name: output
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is success.
          name: success-condition
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is failure.
          name: failure-condition
          type: string
        - default: aipipeline/kubectl-wrapper:0.8.1
          description: Kubectl wrapper image
          name: image
          type: string
        - default: "false"
          description: Enable set owner reference for created resource.
          name: set-ownerreference
          type: string
        steps:
        - args:
          - --action=$(params.action)
          - --merge-strategy=$(params.merge-strategy)
          - |
            --manifest=apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              name: $(PIPELINERUN)-vol1
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
          - --output=$(params.output)
          - --success-condition=$(params.success-condition)
          - --failure-condition=$(params.failure-condition)
          - --set-ownerreference=$(params.set-ownerreference)
          image: $(params.image)
          name: main
          resources: {}
          env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
        results:
        - name: manifest
          description: '{}'
        - name: name
          description: '{.metadata.name}'
        - name: size
          description: '{.status.capacity.storage}'
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      timeout: 0s
    - name: step1-ingest
      params:
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      - name: url
        value: $(params.url)
      taskSpec:
        steps:
        - name: main
          args:
          - mkdir /data/step1 && gsutil cat $(inputs.params.url) | gzip -c >/data/step1/file1.gz
          command:
          - sh
          - -c
          image: google/cloud-sdk:279.0.0
          volumeMounts:
          - mountPath: /data
            name: create-volume
        params:
        - name: create-volume-name
        - name: url
        volumes:
        - name: create-volume
          persistentVolumeClaim:
            claimName: $(inputs.params.create-volume-name)
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      timeout: 0s
    - name: step1-snap
      params:
      - name: action
        value: create
      - name: output
        value: |
          - name: manifest
            valueFrom: '{}'
          - name: name
            valueFrom: '{.metadata.name}'
          - name: size
            valueFrom: '{.status.restoreSize}'
      - name: success-condition
        value: status.readyToUse == true
      - name: set-ownerreference
        value: "false"
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        params:
        - description: Action on the resource
          name: action
          type: string
        - default: strategic
          description: Merge strategy when using action patch
          name: merge-strategy
          type: string
        - default: ''
          description: An express to retrieval data from resource.
          name: output
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is success.
          name: success-condition
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is failure.
          name: failure-condition
          type: string
        - default: aipipeline/kubectl-wrapper:0.8.1
          description: Kubectl wrapper image
          name: image
          type: string
        - default: "false"
          description: Enable set owner reference for created resource.
          name: set-ownerreference
          type: string
        - name: create-volume-name
        steps:
        - args:
          - --action=$(params.action)
          - --merge-strategy=$(params.merge-strategy)
          - |
            --manifest=apiVersion: snapshot.storage.k8s.io/v1alpha1
            kind: VolumeSnapshot
            metadata:
              name: $(PIPELINERUN)-step1-snap
            spec:
              source:
                kind: PersistentVolumeClaim
                name: $(inputs.params.create-volume-name)
          - --output=$(params.output)
          - --success-condition=$(params.success-condition)
          - --failure-condition=$(params.failure-condition)
          - --set-ownerreference=$(params.set-ownerreference)
          image: $(params.image)
          name: main
          resources: {}
          env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
        results:
        - name: manifest
          description: '{}'
        - name: name
          description: '{.metadata.name}'
        - name: size
          description: '{.status.restoreSize}'
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step1-ingest
      timeout: 0s
    - name: step2-gunzip
      params:
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        steps:
        - name: main
          args:
          - mkdir /data/step2 && gunzip /data/step1/file1.gz -c >/data/step2/file1
          command:
          - sh
          - -c
          image: library/bash:4.4.23
          volumeMounts:
          - mountPath: /data
            name: create-volume
        params:
        - name: create-volume-name
        volumes:
        - name: create-volume
          persistentVolumeClaim:
            claimName: $(inputs.params.create-volume-name)
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step1-ingest
      timeout: 0s
    - name: step2-snap
      params:
      - name: action
        value: create
      - name: output
        value: |
          - name: manifest
            valueFrom: '{}'
          - name: name
            valueFrom: '{.metadata.name}'
          - name: size
            valueFrom: '{.status.restoreSize}'
      - name: success-condition
        value: status.readyToUse == true
      - name: set-ownerreference
        value: "false"
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        params:
        - description: Action on the resource
          name: action
          type: string
        - default: strategic
          description: Merge strategy when using action patch
          name: merge-strategy
          type: string
        - default: ''
          description: An express to retrieval data from resource.
          name: output
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is success.
          name: success-condition
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is failure.
          name: failure-condition
          type: string
        - default: aipipeline/kubectl-wrapper:0.8.1
          description: Kubectl wrapper image
          name: image
          type: string
        - default: "false"
          description: Enable set owner reference for created resource.
          name: set-ownerreference
          type: string
        - name: create-volume-name
        steps:
        - args:
          - --action=$(params.action)
          - --merge-strategy=$(params.merge-strategy)
          - |
            --manifest=apiVersion: snapshot.storage.k8s.io/v1alpha1
            kind: VolumeSnapshot
            metadata:
              name: $(PIPELINERUN)-step2-snap
            spec:
              source:
                kind: PersistentVolumeClaim
                name: $(inputs.params.create-volume-name)
          - --output=$(params.output)
          - --success-condition=$(params.success-condition)
          - --failure-condition=$(params.failure-condition)
          - --set-ownerreference=$(params.set-ownerreference)
          image: $(params.image)
          name: main
          resources: {}
          env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
        results:
        - name: manifest
          description: '{}'
        - name: name
          description: '{.metadata.name}'
        - name: size
          description: '{.status.restoreSize}'
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step2-gunzip
      timeout: 0s
    - name: step3-copy
      params:
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        steps:
        - name: main
          args:
          - mkdir /data/step3 && cp -av /data/step2/file1 /data/step3/file3
          command:
          - sh
          - -c
          image: library/bash:4.4.23
          volumeMounts:
          - mountPath: /data
            name: create-volume
        params:
        - name: create-volume-name
        volumes:
        - name: create-volume
          persistentVolumeClaim:
            claimName: $(inputs.params.create-volume-name)
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step2-gunzip
      timeout: 0s
    - name: step3-snap
      params:
      - name: action
        value: create
      - name: output
        value: |
          - name: manifest
            valueFrom: '{}'
          - name: name
            valueFrom: '{.metadata.name}'
          - name: size
            valueFrom: '{.status.restoreSize}'
      - name: success-condition
        value: status.readyToUse == true
      - name: set-ownerreference
        value: "false"
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        params:
        - description: Action on the resource
          name: action
          type: string
        - default: strategic
          description: Merge strategy when using action patch
          name: merge-strategy
          type: string
        - default: ''
          description: An express to retrieval data from resource.
          name: output
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is success.
          name: success-condition
          type: string
        - default: ''
          description: A label selector express to decide if the action on resource
            is failure.
          name: failure-condition
          type: string
        - default: aipipeline/kubectl-wrapper:0.8.1
          description: Kubectl wrapper image
          name: image
          type: string
        - default: "false"
          description: Enable set owner reference for created resource.
          name: set-ownerreference
          type: string
        - name: create-volume-name
        steps:
        - args:
          - --action=$(params.action)
          - --merge-strategy=$(params.merge-strategy)
          - |
            --manifest=apiVersion: snapshot.storage.k8s.io/v1alpha1
            kind: VolumeSnapshot
            metadata:
              name: $(PIPELINERUN)-step3-snap
            spec:
              source:
                kind: PersistentVolumeClaim
                name: $(inputs.params.create-volume-name)
          - --output=$(params.output)
          - --success-condition=$(params.success-condition)
          - --failure-condition=$(params.failure-condition)
          - --set-ownerreference=$(params.set-ownerreference)
          image: $(params.image)
          name: main
          resources: {}
          env:
          - name: PIPELINERUN
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tekton.dev/pipelineRun']
        results:
        - name: manifest
          description: '{}'
        - name: name
          description: '{.metadata.name}'
        - name: size
          description: '{.status.restoreSize}'
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step3-copy
      timeout: 0s
    - name: step4-output
      params:
      - name: create-volume-name
        value: $(tasks.create-volume.results.name)
      taskSpec:
        steps:
        - name: main
          command:
          - cat
          - /data/step2/file1
          - /data/step3/file3
          image: library/bash:4.4.23
          volumeMounts:
          - mountPath: /data
            name: create-volume
        params:
        - name: create-volume-name
        volumes:
        - name: create-volume
          persistentVolumeClaim:
            claimName: $(inputs.params.create-volume-name)
        metadata:
          labels:
            pipelines.kubeflow.org/pipelinename: ''
            pipelines.kubeflow.org/generation: ''
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            tekton.dev/template: ''
      runAfter:
      - step3-copy
      timeout: 0s
  timeout: 0s
