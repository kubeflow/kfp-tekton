# Copyright 2021-2023 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: big-data
  annotations:
    tekton.dev/output_artifacts: '{"print-big": [{"key": "artifacts/$PIPELINERUN/print-big/output_value.tgz",
      "name": "print-big-output_value", "path": "/tmp/outputs/output_value/data"}],
      "print-sm": [{"key": "artifacts/$PIPELINERUN/print-sm/output_value.tgz", "name":
      "print-sm-output_value", "path": "/tmp/outputs/output_value/data"}]}'
    tekton.dev/input_artifacts: '{}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"print-big": [["output_value", "$(results.output-value.path)"]],
      "print-sm": [["output_value", "$(results.output-value.path)"]]}'
    sidecar.istio.io/inject: "false"
    tekton.dev/template: ''
    pipelines.kubeflow.org/big_data_passing_format: $(workspaces.$TASK_NAME.path)/artifacts/$ORIG_PR_NAME/$TASKRUN_NAME/$TASK_PARAM_NAME
    pipelines.kubeflow.org/pipeline_spec: '{"name": "big-data"}'
  labels:
    pipelines.kubeflow.org/pipelinename: ''
    pipelines.kubeflow.org/generation: ''
spec:
  pipelineSpec:
    tasks:
    - name: print-sm
      taskSpec:
        steps:
        - name: main
          command:
          - sh
          - -c
          - |
            set -e
            echo $0 > $1
          - literal
          - $(results.output-value.path)
          image: alpine:3.6
          volumeMounts:
          - mountPath: /volume-sm
            name: volume-sm
        results:
        - name: output-value
          type: string
          description: /tmp/outputs/output_value/data
        volumes:
        - name: volume-sm
          secret:
            secretName: secret-sm
        metadata:
          labels:
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "print-sm", "outputs":
              [{"description": "Represents an output parameter.", "name": "output_value",
              "type": "String"}], "version": "print-sm@sha256=e88f5ee1607e92e4cf859907b2f81bdc766fc69cff62010f2f93d4c850a4d429"}'
    - name: print-big
      taskSpec:
        steps:
        - image: busybox
          name: copy-inputs
          command:
          - sh
          - -ec
          - |
            set -exo pipefail
            echo -n "literal" > /tmp/inputs/input_text/data
        - name: main
          command:
          - sh
          - -c
          - |
            set -e
            cat $0 > $1
          - /tmp/inputs/input_text/data
          - $(results.output-value.path)
          image: alpine:3.6
          volumeMounts:
          - mountPath: /volume-big
            name: volume-big
        results:
        - name: output-value
          type: string
          description: /tmp/outputs/output_value/data
        volumes:
        - name: volume-big
          secret:
            secretName: secret-big
        - name: input-text
          emptyDir: {}
        metadata:
          labels:
            pipelines.kubeflow.org/cache_enabled: "true"
          annotations:
            pipelines.kubeflow.org/component_spec_digest: '{"name": "print-big", "outputs":
              [{"description": "Represents an output parameter.", "name": "output_value",
              "type": "String"}], "version": "print-big@sha256=e85f43e32a0210be43f84f43434e61113ce4770f37f5346acc41523a270e72d4"}'
        stepTemplate:
          volumeMounts:
          - name: input-text
            mountPath: /tmp/inputs/input_text
