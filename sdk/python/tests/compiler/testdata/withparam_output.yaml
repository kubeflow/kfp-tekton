apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: my-out-cop0
spec:
  results:
  - description: /tmp/out.json
    name: out
  steps:
  - args:
    - python -c "import json; import sys; json.dump([i for i in range(20, 31)], open('$(results.out.path)',
      'w'))"
    command:
    - sh
    - -c
    image: python:alpine3.6
    name: my-out-cop0
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: my-in-cop1
spec:
  params:
  - name: my-out-cop0-out
  steps:
  - args:
    - 'echo do output op1 item: $(inputs.params.my-out-cop0-out)'
    command:
    - sh
    - -c
    image: library/bash:4.4.23
    name: my-in-cop1
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: my-out-cop2
spec:
  params:
  - name: my-out-cop0-out
  steps:
  - args:
    - 'echo do output op2, outp: $(inputs.params.my-out-cop0-out)'
    command:
    - sh
    - -c
    image: library/bash:4.4.23
    name: my-out-cop2
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelines.kubeflow.org/pipeline_spec: '{"name": "my-pipeline"}'
  name: my-pipeline
spec:
  params: []
  tasks:
  - name: my-out-cop0
    params: []
    taskRef:
      name: my-out-cop0
  - name: my-in-cop1
    params:
    - name: my-out-cop0-out
      value: $(tasks.my-out-cop0.results.out)
    taskRef:
      name: my-in-cop1
  - name: my-out-cop2
    params:
    - name: my-out-cop0-out
      value: $(tasks.my-out-cop0.results.out)
    taskRef:
      name: my-out-cop2
