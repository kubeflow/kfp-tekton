# Copyright 2021-2023 kubeflow.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: double-recursion-test
  annotations:
    tekton.dev/output_artifacts: '{"print": [{"key": "artifacts/$PIPELINERUN/print/output.tgz",
      "name": "print-output", "path": "/tmp/outputs/output/data"}]}'
    tekton.dev/input_artifacts: '{"print": [{"name": "condition-cel-3-outcome", "parent_task":
      "condition-cel-3"}, {"name": "condition-cel-outcome", "parent_task": "condition-cel"}]}'
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
    tekton.dev/artifact_items: '{"print": [["output", "$(results.output.path)"]]}'
    sidecar.istio.io/inject: "false"
    tekton.dev/template: ''
    pipelines.kubeflow.org/big_data_passing_format: $(workspaces.$TASK_NAME.path)/artifacts/$ORIG_PR_NAME/$TASKRUN_NAME/$TASK_PARAM_NAME
    pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"default": "4", "name": "until_a",
      "optional": true, "type": "Integer"}, {"default": "3", "name": "until_b", "optional":
      true, "type": "Integer"}], "name": "double-recursion-test"}'
    tekton.dev/resource_templates: '[{"apiVersion": "custom.tekton.dev/v1alpha1",
      "kind": "PipelineLoop", "metadata": {"name": "double-recursion-test-graph-recur-a-2"},
      "spec": {"iterateParam": "just_one_iteration", "pipelineSpec": {"params": [{"name":
      "condition-cel-2-outcome", "type": "string"}, {"name": "condition-cel-outcome",
      "type": "string"}, {"name": "just_one_iteration", "type": "string"}, {"name":
      "until_a", "type": "string"}, {"name": "until_b", "type": "string"}], "tasks":
      [{"name": "condition-cel-3", "params": [{"name": "outcome", "value": "0"}],
      "taskRef": {"apiVersion": "cel.tekton.dev/v1alpha1", "kind": "CEL", "name":
      "cel_condition"}}, {"name": "condition-cel-4", "params": [{"name": "outcome",
      "value": "$(tasks.condition-cel-3.results.outcome) < $(params.until_b)"}], "taskRef":
      {"apiVersion": "cel.tekton.dev/v1alpha1", "kind": "CEL", "name": "cel_condition"}},
      {"name": "condition-cel-7", "params": [{"name": "outcome", "value": "$(params.condition-cel-outcome)
      + 1"}], "runAfter": ["double-recursion-test-graph-recur-b-4"], "taskRef": {"apiVersion":
      "cel.tekton.dev/v1alpha1", "kind": "CEL", "name": "cel_condition"}}, {"name":
      "condition-cel-8", "params": [{"name": "outcome", "value": "$(tasks.condition-cel-7.results.outcome)
      < $(params.until_a)"}], "taskRef": {"apiVersion": "cel.tekton.dev/v1alpha1",
      "kind": "CEL", "name": "cel_condition"}}, {"name": "recur-a", "params": [{"name":
      "just_one_iteration", "value": ["1"]}, {"name": "condition-cel-outcome", "value":
      "$(tasks.condition-cel-7.results.outcome)"}, {"name": "until_a", "value": "$(params.until_a)"},
      {"name": "condition-cel-2-outcome", "value": "$(params.condition-cel-2-outcome)"},
      {"name": "until_b", "value": "$(params.until_b)"}], "taskRef": {"apiVersion":
      "custom.tekton.dev/v1alpha1", "kind": "PipelineLoop", "name": "double-recursion-test-graph-recur-a-2"},
      "when": [{"input": "$(tasks.condition-cel-8.results.outcome)", "operator": "in",
      "values": ["true"]}]}, {"name": "double-recursion-test-graph-recur-b-4", "params":
      [{"name": "condition-cel-2-outcome", "value": "$(params.condition-cel-2-outcome)"},
      {"name": "condition-cel-3-outcome", "value": "$(tasks.condition-cel-3.results.outcome)"},
      {"name": "condition-cel-4-outcome", "value": "$(tasks.condition-cel-4.results.outcome)"},
      {"name": "condition-cel-outcome", "value": "$(params.condition-cel-outcome)"},
      {"name": "just_one_iteration", "value": ["1"]}, {"name": "until_b", "value":
      "$(params.until_b)"}], "taskRef": {"apiVersion": "custom.tekton.dev/v1alpha1",
      "kind": "PipelineLoop", "name": "double-recursion-test-graph-recur-b-4"}, "when":
      [{"input": "$(tasks.condition-cel-4.results.outcome)", "operator": "in", "values":
      ["true"]}]}]}}}, {"apiVersion": "custom.tekton.dev/v1alpha1", "kind": "PipelineLoop",
      "metadata": {"name": "double-recursion-test-graph-recur-b-4"}, "spec": {"iterateParam":
      "just_one_iteration", "pipelineSpec": {"params": [{"name": "condition-cel-2-outcome",
      "type": "string"}, {"name": "condition-cel-3-outcome", "type": "string"}, {"name":
      "condition-cel-4-outcome", "type": "string"}, {"name": "condition-cel-outcome",
      "type": "string"}, {"name": "just_one_iteration", "type": "string"}, {"name":
      "until_b", "type": "string"}], "tasks": [{"name": "print", "params": [{"name":
      "condition-cel-3-outcome", "value": "$(params.condition-cel-3-outcome)"}, {"name":
      "condition-cel-outcome", "value": "$(params.condition-cel-outcome)"}], "taskSpec":
      {"metadata": {"annotations": {"pipelines.kubeflow.org/component_spec_digest":
      "{\"name\": \"print\", \"outputs\": [{\"name\": \"output\", \"type\": \"String\"}],
      \"version\": \"print@sha256=8bcd5db23262c19ef5c49e890dfd60507d8da6c514d628749e64239c78a27a92\"}"},
      "labels": {"pipelines.kubeflow.org/cache_enabled": "true"}}, "params": [{"name":
      "condition-cel-3-outcome", "type": "string"}, {"name": "condition-cel-outcome",
      "type": "string"}], "results": [{"description": "/tmp/outputs/output/data",
      "name": "output", "type": "string"}], "steps": [{"command": ["sh", "-c", "echo
      $0 | tee $1\n", "Iter A: $(inputs.params.condition-cel-outcome), B: $(inputs.params.condition-cel-3-outcome)",
      "$(results.output.path)"], "image": "alpine:3.6", "name": "main"}]}}, {"name":
      "condition-cel-5", "params": [{"name": "outcome", "value": "$(params.condition-cel-3-outcome)
      + 1"}], "runAfter": ["print"], "taskRef": {"apiVersion": "cel.tekton.dev/v1alpha1",
      "kind": "CEL", "name": "cel_condition"}}, {"name": "condition-cel-6", "params":
      [{"name": "outcome", "value": "$(tasks.condition-cel-5.results.outcome) < $(params.until_b)"}],
      "taskRef": {"apiVersion": "cel.tekton.dev/v1alpha1", "kind": "CEL", "name":
      "cel_condition"}}, {"name": "recur-b", "params": [{"name": "just_one_iteration",
      "value": ["1"]}, {"name": "condition-cel-3-outcome", "value": "$(tasks.condition-cel-5.results.outcome)"},
      {"name": "until_b", "value": "$(params.until_b)"}, {"name": "condition-cel-2-outcome",
      "value": "$(params.condition-cel-2-outcome)"}, {"name": "condition-cel-4-outcome",
      "value": "$(params.condition-cel-4-outcome)"}, {"name": "condition-cel-outcome",
      "value": "$(params.condition-cel-outcome)"}], "taskRef": {"apiVersion": "custom.tekton.dev/v1alpha1",
      "kind": "PipelineLoop", "name": "double-recursion-test-graph-recur-b-4"}, "when":
      [{"input": "$(tasks.condition-cel-6.results.outcome)", "operator": "in", "values":
      ["true"]}]}]}}}]'
  labels:
    pipelines.kubeflow.org/pipelinename: ''
    pipelines.kubeflow.org/generation: ''
spec:
  params:
  - name: until_a
    value: '4'
  - name: until_b
    value: '3'
  pipelineSpec:
    params:
    - name: until_a
      default: '4'
    - name: until_b
      default: '3'
    tasks:
    - name: condition-cel
      params:
      - name: outcome
        value: '0'
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
    - name: condition-cel-2
      params:
      - name: outcome
        value: $(tasks.condition-cel.results.outcome) < $(params.until_a)
      taskRef:
        name: cel_condition
        apiVersion: cel.tekton.dev/v1alpha1
        kind: CEL
    - name: double-recursion-test-graph-recur-a-2
      taskRef:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: PipelineLoop
        name: double-recursion-test-graph-recur-a-2
      params:
      - name: condition-cel-2-outcome
        value: $(tasks.condition-cel-2.results.outcome)
      - name: condition-cel-outcome
        value: $(tasks.condition-cel.results.outcome)
      - name: just_one_iteration
        value:
        - '1'
      - name: until_a
        value: $(params.until_a)
      - name: until_b
        value: $(params.until_b)
      when:
      - input: $(tasks.condition-cel-2.results.outcome)
        operator: in
        values:
        - "true"
