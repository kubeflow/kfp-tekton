apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    pipelines.kubeflow.org/v2_pipeline: "true"
    tekton.dev/artifact_bucket: mlpipeline
    tekton.dev/artifact_endpoint: minio-service.kubeflow:9000
    tekton.dev/artifact_endpoint_scheme: http://
  creationTimestamp: null
  generateName: pipeline-with-exit-handler-
  labels:
    pipelines.kubeflow.org/v2_component: "true"
spec:
  pipelineSpec:
    finally:
    - name: exithandler
      params:
      - name: parent-dag-id
        value: $(tasks.root-system-dag-driver.results.execution-id)
      taskSpec:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: ExitHandler
        metadata: {}
        spec:
          pipelineSpec:
            params:
            - name: parent-dag-id
              type: string
            tasks:
            - name: print-op-driver
              params:
              - name: type
                value: CONTAINER
              - name: pipeline_name
                value: pipeline-with-exit-handler
              - name: run_id
                value: $(context.pipelineRun.uid)
              - name: dag_execution_id
                value: $(params.parent-dag-id)
              - name: component
                value: '{"executorLabel":"exec-print-op","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
              - name: task
                value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-print-op"},"inputs":{"parameters":{"message":{"runtimeValue":{"constant":"Exit
                  handler has worked!"}}}},"taskInfo":{"name":"print-op"},"triggerPolicy":{"strategy":"ALL_UPSTREAM_TASKS_COMPLETED"}}'
              - name: container
                value: '{"args":["--executor_input","{{$}}","--function_to_execute","print_op"],"command":["sh","-c","\nif
                  ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||
                  python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
                  python3 -m pip install --quiet     --no-warn-script-location ''kfp==2.0.0-beta.6''
                  \u0026\u0026 \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp
                  -d)\nprintf \"%s\" \"$0\" \u003e \"$program_path/ephemeral_component.py\"\npython3
                  -m kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
                  kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import
                  *\n\ndef print_op(message: str):\n    \"\"\"Prints a message.\"\"\"\n    print(message)\n\n"],"image":"python:3.7"}'
              - name: iteration_index
                value: ""
              - name: kubernetes_config
                value: ""
              - name: mlmd_server_address
                value: metadata-grpc-service.kubeflow.svc.cluster.local
              - name: mlmd_server_port
                value: "8080"
              taskRef:
                apiVersion: kfp-driver.tekton.dev/v1alpha1
                kind: KFPDriver
            - name: print-op
              params:
              - name: executor-input
                value: $(tasks.print-op-driver.results.executor-input)
              - name: execution-id
                value: $(tasks.print-op-driver.results.execution-id)
              - name: run-id
                value: $(context.pipelineRun.uid)
              - name: component-spec
                value: '{"executorLabel":"exec-print-op","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
              - name: pod-spec-patch
                value: $(tasks.print-op-driver.results.pod-spec-patch)
              taskSpec:
                apiVersion: custom.tekton.dev/v1alpha1
                kind: KFPTask
                metadata:
                  annotations:
                    pipelines.kubeflow.org/v2_pipeline: "true"
                  labels:
                    pipelines.kubeflow.org/v2_component: "true"
                spec:
                  taskSpec:
                    params:
                    - name: executor-input
                      type: string
                    - name: execution-id
                      type: string
                    - name: run-id
                      type: string
                    - name: component-spec
                      type: string
                    steps:
                    - command:
                      - launcher-v2
                      - --copy
                      - /tekton/home/launch
                      image: gcr.io/ml-pipeline/kfp-launcher@sha256:80cf120abd125db84fa547640fd6386c4b2a26936e0c2b04a7d3634991a850a4
                      imagePullPolicy: Always
                      name: kfp-launcher
                      computeResources: {}
                    - args:
                      - sh
                      - -c
                      - |2

                        if ! [ -x "$(command -v pip)" ]; then
                            python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
                        fi

                        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.6' && "$0" "$@"
                      - sh
                      - -ec
                      - |
                        program_path=$(mktemp -d)
                        printf "%s" "$0" > "$program_path/ephemeral_component.py"
                        python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
                      - |2+

                        import kfp
                        from kfp import dsl
                        from kfp.dsl import *
                        from typing import *

                        def print_op(message: str):
                            """Prints a message."""
                            print(message)

                      - --executor_input
                      - '{{$}}'
                      - --function_to_execute
                      - print_op
                      command:
                      - /tekton/home/launch
                      - --pipeline_name
                      - pipeline-with-exit-handler
                      - --run_id
                      - $(params.run-id)
                      - --execution_id
                      - $(params.execution-id)
                      - --executor_input
                      - $(params.executor-input)
                      - --component_spec
                      - $(params.component-spec)
                      - --pod_name
                      - $(KFP_POD_NAME)
                      - --pod_uid
                      - $(KFP_POD_UID)
                      - --mlmd_server_address
                      - $(METADATA_GRPC_SERVICE_HOST)
                      - --mlmd_server_port
                      - $(METADATA_GRPC_SERVICE_PORT)
                      - --
                      env:
                      - name: KFP_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: KFP_POD_UID
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.uid
                      - name: METADATA_GRPC_SERVICE_HOST
                        value: metadata-grpc-service.kubeflow.svc.cluster.local
                      - name: METADATA_GRPC_SERVICE_PORT
                        value: "8080"
                      - name: ML_PIPELINE_SERVICE_HOST
                        value: ml-pipeline.kubeflow.svc.cluster.local
                      - name: ML_PIPELINE_SERVICE_PORT_GRPC
                        value: "8887"
                      envFrom:
                      - configMapRef:
                          name: metadata-grpc-configmap
                          optional: true
                      image: python:3.7
                      name: user-main
                      computeResources: {}
              when:
              - input: $(tasks.print-op-driver.results.cached-decision)
                operator: in
                values:
                - "false"
            - name: root-system-dag-pub-driver
              params:
              - name: type
                value: DAG-PUB
              - name: pipeline_name
                value: pipeline-with-exit-handler
              - name: run_id
                value: $(context.pipelineRun.uid)
              - name: dag_execution_id
                value: $(params.parent-dag-id)
              - name: mlmd_server_address
                value: metadata-grpc-service.kubeflow.svc.cluster.local
              - name: mlmd_server_port
                value: "8080"
              runAfter:
              - print-op
              taskRef:
                apiVersion: kfp-driver.tekton.dev/v1alpha1
                kind: KFPDriver
    tasks:
    - name: fail-op-driver
      params:
      - name: type
        value: CONTAINER
      - name: pipeline_name
        value: pipeline-with-exit-handler
      - name: run_id
        value: $(context.pipelineRun.uid)
      - name: dag_execution_id
        value: $(tasks.exit-handler-1-dag-driver.results.execution-id)
      - name: component
        value: '{"executorLabel":"exec-fail-op","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
      - name: task
        value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-fail-op"},"inputs":{"parameters":{"message":{"runtimeValue":{"constant":"Task
          failed."}}}},"taskInfo":{"name":"fail-op"}}'
      - name: container
        value: '{"args":["--executor_input","{{$}}","--function_to_execute","fail_op"],"command":["sh","-c","\nif
          ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
          -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
          python3 -m pip install --quiet     --no-warn-script-location ''kfp==2.0.0-beta.6''
          \u0026\u0026 \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\nprintf
          \"%s\" \"$0\" \u003e \"$program_path/ephemeral_component.py\"\npython3 -m
          kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
          kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
          fail_op(message: str):\n    \"\"\"Fails.\"\"\"\n    import sys\n    print(message)\n    sys.exit(1)\n\n"],"image":"python:3.7"}'
      - name: iteration_index
        value: ""
      - name: kubernetes_config
        value: ""
      - name: mlmd_server_address
        value: metadata-grpc-service.kubeflow.svc.cluster.local
      - name: mlmd_server_port
        value: "8080"
      taskRef:
        apiVersion: kfp-driver.tekton.dev/v1alpha1
        kind: KFPDriver
    - name: fail-op
      params:
      - name: executor-input
        value: $(tasks.fail-op-driver.results.executor-input)
      - name: execution-id
        value: $(tasks.fail-op-driver.results.execution-id)
      - name: run-id
        value: $(context.pipelineRun.uid)
      - name: component-spec
        value: '{"executorLabel":"exec-fail-op","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
      - name: pod-spec-patch
        value: $(tasks.fail-op-driver.results.pod-spec-patch)
      taskSpec:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: KFPTask
        metadata:
          annotations:
            pipelines.kubeflow.org/v2_pipeline: "true"
          labels:
            pipelines.kubeflow.org/v2_component: "true"
        spec:
          taskSpec:
            params:
            - name: executor-input
              type: string
            - name: execution-id
              type: string
            - name: run-id
              type: string
            - name: component-spec
              type: string
            steps:
            - command:
              - launcher-v2
              - --copy
              - /tekton/home/launch
              image: gcr.io/ml-pipeline/kfp-launcher@sha256:80cf120abd125db84fa547640fd6386c4b2a26936e0c2b04a7d3634991a850a4
              imagePullPolicy: Always
              name: kfp-launcher
              computeResources: {}
            - args:
              - sh
              - -c
              - |2

                if ! [ -x "$(command -v pip)" ]; then
                    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
                fi

                PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.6' && "$0" "$@"
              - sh
              - -ec
              - |
                program_path=$(mktemp -d)
                printf "%s" "$0" > "$program_path/ephemeral_component.py"
                python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
              - |2+

                import kfp
                from kfp import dsl
                from kfp.dsl import *
                from typing import *

                def fail_op(message: str):
                    """Fails."""
                    import sys
                    print(message)
                    sys.exit(1)

              - --executor_input
              - '{{$}}'
              - --function_to_execute
              - fail_op
              command:
              - /tekton/home/launch
              - --pipeline_name
              - pipeline-with-exit-handler
              - --run_id
              - $(params.run-id)
              - --execution_id
              - $(params.execution-id)
              - --executor_input
              - $(params.executor-input)
              - --component_spec
              - $(params.component-spec)
              - --pod_name
              - $(KFP_POD_NAME)
              - --pod_uid
              - $(KFP_POD_UID)
              - --mlmd_server_address
              - $(METADATA_GRPC_SERVICE_HOST)
              - --mlmd_server_port
              - $(METADATA_GRPC_SERVICE_PORT)
              - --
              env:
              - name: KFP_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: KFP_POD_UID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
              - name: METADATA_GRPC_SERVICE_HOST
                value: metadata-grpc-service.kubeflow.svc.cluster.local
              - name: METADATA_GRPC_SERVICE_PORT
                value: "8080"
              - name: ML_PIPELINE_SERVICE_HOST
                value: ml-pipeline.kubeflow.svc.cluster.local
              - name: ML_PIPELINE_SERVICE_PORT_GRPC
                value: "8887"
              envFrom:
              - configMapRef:
                  name: metadata-grpc-configmap
                  optional: true
              image: python:3.7
              name: user-main
              computeResources: {}
      when:
      - input: $(tasks.fail-op-driver.results.cached-decision)
        operator: in
        values:
        - "false"
    - name: print-op-2-driver
      params:
      - name: type
        value: CONTAINER
      - name: pipeline_name
        value: pipeline-with-exit-handler
      - name: run_id
        value: $(context.pipelineRun.uid)
      - name: dag_execution_id
        value: $(tasks.exit-handler-1-dag-driver.results.execution-id)
      - name: component
        value: '{"executorLabel":"exec-print-op-2","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
      - name: task
        value: '{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-print-op-2"},"inputs":{"parameters":{"message":{"componentInputParameter":"pipelinechannel--message"}}},"taskInfo":{"name":"print-op-2"}}'
      - name: container
        value: '{"args":["--executor_input","{{$}}","--function_to_execute","print_op"],"command":["sh","-c","\nif
          ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3
          -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1
          python3 -m pip install --quiet     --no-warn-script-location ''kfp==2.0.0-beta.6''
          \u0026\u0026 \"$0\" \"$@\"\n","sh","-ec","program_path=$(mktemp -d)\nprintf
          \"%s\" \"$0\" \u003e \"$program_path/ephemeral_component.py\"\npython3 -m
          kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n","\nimport
          kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef
          print_op(message: str):\n    \"\"\"Prints a message.\"\"\"\n    print(message)\n\n"],"image":"python:3.7"}'
      - name: iteration_index
        value: ""
      - name: kubernetes_config
        value: ""
      - name: mlmd_server_address
        value: metadata-grpc-service.kubeflow.svc.cluster.local
      - name: mlmd_server_port
        value: "8080"
      taskRef:
        apiVersion: kfp-driver.tekton.dev/v1alpha1
        kind: KFPDriver
    - name: print-op-2
      params:
      - name: executor-input
        value: $(tasks.print-op-2-driver.results.executor-input)
      - name: execution-id
        value: $(tasks.print-op-2-driver.results.execution-id)
      - name: run-id
        value: $(context.pipelineRun.uid)
      - name: component-spec
        value: '{"executorLabel":"exec-print-op-2","inputDefinitions":{"parameters":{"message":{"parameterType":"STRING"}}}}'
      - name: pod-spec-patch
        value: $(tasks.print-op-2-driver.results.pod-spec-patch)
      taskSpec:
        apiVersion: custom.tekton.dev/v1alpha1
        kind: KFPTask
        metadata:
          annotations:
            pipelines.kubeflow.org/v2_pipeline: "true"
          labels:
            pipelines.kubeflow.org/v2_component: "true"
        spec:
          taskSpec:
            params:
            - name: executor-input
              type: string
            - name: execution-id
              type: string
            - name: run-id
              type: string
            - name: component-spec
              type: string
            steps:
            - command:
              - launcher-v2
              - --copy
              - /tekton/home/launch
              image: gcr.io/ml-pipeline/kfp-launcher@sha256:80cf120abd125db84fa547640fd6386c4b2a26936e0c2b04a7d3634991a850a4
              imagePullPolicy: Always
              name: kfp-launcher
              computeResources: {}
            - args:
              - sh
              - -c
              - |2

                if ! [ -x "$(command -v pip)" ]; then
                    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
                fi

                PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.6' && "$0" "$@"
              - sh
              - -ec
              - |
                program_path=$(mktemp -d)
                printf "%s" "$0" > "$program_path/ephemeral_component.py"
                python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
              - |2+

                import kfp
                from kfp import dsl
                from kfp.dsl import *
                from typing import *

                def print_op(message: str):
                    """Prints a message."""
                    print(message)

              - --executor_input
              - '{{$}}'
              - --function_to_execute
              - print_op
              command:
              - /tekton/home/launch
              - --pipeline_name
              - pipeline-with-exit-handler
              - --run_id
              - $(params.run-id)
              - --execution_id
              - $(params.execution-id)
              - --executor_input
              - $(params.executor-input)
              - --component_spec
              - $(params.component-spec)
              - --pod_name
              - $(KFP_POD_NAME)
              - --pod_uid
              - $(KFP_POD_UID)
              - --mlmd_server_address
              - $(METADATA_GRPC_SERVICE_HOST)
              - --mlmd_server_port
              - $(METADATA_GRPC_SERVICE_PORT)
              - --
              env:
              - name: KFP_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: KFP_POD_UID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
              - name: METADATA_GRPC_SERVICE_HOST
                value: metadata-grpc-service.kubeflow.svc.cluster.local
              - name: METADATA_GRPC_SERVICE_PORT
                value: "8080"
              - name: ML_PIPELINE_SERVICE_HOST
                value: ml-pipeline.kubeflow.svc.cluster.local
              - name: ML_PIPELINE_SERVICE_PORT_GRPC
                value: "8887"
              envFrom:
              - configMapRef:
                  name: metadata-grpc-configmap
                  optional: true
              image: python:3.7
              name: user-main
              computeResources: {}
      when:
      - input: $(tasks.print-op-2-driver.results.cached-decision)
        operator: in
        values:
        - "false"
    - name: exit-handler-1-dag-driver
      params:
      - name: type
        value: DAG
      - name: pipeline_name
        value: pipeline-with-exit-handler
      - name: run_id
        value: $(context.pipelineRun.uid)
      - name: dag_execution_id
        value: $(tasks.root-system-dag-driver.results.execution-id)
      - name: component
        value: '{"dag":{"tasks":{"fail-op":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-fail-op"},"inputs":{"parameters":{"message":{"runtimeValue":{"constant":"Task
          failed."}}}},"taskInfo":{"name":"fail-op"}},"print-op-2":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-print-op-2"},"inputs":{"parameters":{"message":{"componentInputParameter":"pipelinechannel--message"}}},"taskInfo":{"name":"print-op-2"}}}},"inputDefinitions":{"parameters":{"pipelinechannel--message":{"parameterType":"STRING"}}}}'
      - name: task
        value: '{"componentRef":{"name":"comp-exit-handler-1"},"inputs":{"parameters":{"pipelinechannel--message":{"componentInputParameter":"message"}}},"taskInfo":{"name":"exit-handler-1"}}'
      - name: runtime_config
        value: ""
      - name: iteration_index
        value: "-1"
      - name: mlmd_server_address
        value: metadata-grpc-service.kubeflow.svc.cluster.local
      - name: mlmd_server_port
        value: "8080"
      taskRef:
        apiVersion: kfp-driver.tekton.dev/v1alpha1
        kind: KFPDriver
    - name: exit-handler-1-dag-pub-driver
      params:
      - name: type
        value: DAG-PUB
      - name: pipeline_name
        value: pipeline-with-exit-handler
      - name: run_id
        value: $(context.pipelineRun.uid)
      - name: dag_execution_id
        value: $(tasks.exit-handler-1-dag-driver.results.execution-id)
      - name: mlmd_server_address
        value: metadata-grpc-service.kubeflow.svc.cluster.local
      - name: mlmd_server_port
        value: "8080"
      runAfter:
      - fail-op
      - print-op-2
      taskRef:
        apiVersion: kfp-driver.tekton.dev/v1alpha1
        kind: KFPDriver
    - name: root-system-dag-driver
      params:
      - name: type
        value: ROOT_DAG
      - name: pipeline_name
        value: pipeline-with-exit-handler
      - name: run_id
        value: $(context.pipelineRun.uid)
      - name: dag_execution_id
        value: "0"
      - name: component
        value: '{"dag":{"tasks":{"exit-handler-1":{"componentRef":{"name":"comp-exit-handler-1"},"inputs":{"parameters":{"pipelinechannel--message":{"componentInputParameter":"message"}}},"taskInfo":{"name":"exit-handler-1"}},"print-op":{"cachingOptions":{"enableCache":true},"componentRef":{"name":"comp-print-op"},"inputs":{"parameters":{"message":{"runtimeValue":{"constant":"Exit
          handler has worked!"}}}},"taskInfo":{"name":"print-op"},"triggerPolicy":{"strategy":"ALL_UPSTREAM_TASKS_COMPLETED"}}}},"inputDefinitions":{"parameters":{"message":{"defaultValue":"Hello
          World!","parameterType":"STRING"}}}}'
      - name: task
        value: ""
      - name: runtime_config
        value: '{"parameterValues":{"message":"Hello World!"}}'
      - name: iteration_index
        value: "-1"
      - name: mlmd_server_address
        value: metadata-grpc-service.kubeflow.svc.cluster.local
      - name: mlmd_server_port
        value: "8080"
      taskRef:
        apiVersion: kfp-driver.tekton.dev/v1alpha1
        kind: KFPDriver
status: {}
