diff a/backend/src/crd/pkg/client/informers/externalversions/scheduledworkflow/v1beta1/scheduledworkflow.go b/backend/src/crd/pkg/client/informers/externalversions/scheduledworkflow/v1beta1/scheduledworkflow.go	(rejected hunks)
@@ -16,6 +16,7 @@
 package v1beta1
 
 import (
+	"context"
 	time "time"
 
 	scheduledworkflowv1beta1 "github.com/kubeflow/pipelines/backend/src/crd/pkg/apis/scheduledworkflow/v1beta1"
@@ -52,19 +53,20 @@ func NewScheduledWorkflowInformer(client versioned.Interface, namespace string,
 // Always prefer using an informer factory to get a shared informer instead of getting an independent
 // one. This reduces memory footprint and number of connections to the server.
 func NewFilteredScheduledWorkflowInformer(client versioned.Interface, namespace string, resyncPeriod time.Duration, indexers cache.Indexers, tweakListOptions internalinterfaces.TweakListOptionsFunc) cache.SharedIndexInformer {
+	ctx := context.Background()
 	return cache.NewSharedIndexInformer(
 		&cache.ListWatch{
 			ListFunc: func(options v1.ListOptions) (runtime.Object, error) {
 				if tweakListOptions != nil {
 					tweakListOptions(&options)
 				}
-				return client.ScheduledworkflowV1beta1().ScheduledWorkflows(namespace).List(options)
+				return client.ScheduledworkflowV1beta1().ScheduledWorkflows(namespace).List(ctx, options)
 			},
 			WatchFunc: func(options v1.ListOptions) (watch.Interface, error) {
 				if tweakListOptions != nil {
 					tweakListOptions(&options)
 				}
-				return client.ScheduledworkflowV1beta1().ScheduledWorkflows(namespace).Watch(options)
+				return client.ScheduledworkflowV1beta1().ScheduledWorkflows(namespace).Watch(ctx, options)
 			},
 		},
 		&scheduledworkflowv1beta1.ScheduledWorkflow{},
