diff a/backend/src/apiserver/client/token_review_fake.go b/backend/src/apiserver/client/token_review_fake.go	(rejected hunks)
@@ -15,15 +15,18 @@
 package client
 
 import (
+	"context"
+
 	"github.com/kubeflow/pipelines/backend/src/apiserver/common"
 	"github.com/pkg/errors"
 	authv1 "k8s.io/api/authentication/v1"
+	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 )
 
 type FakeTokenReviewClient struct {
 }
 
-func (FakeTokenReviewClient) Create(*authv1.TokenReview) (*authv1.TokenReview, error) {
+func (FakeTokenReviewClient) Create(context.Context, *authv1.TokenReview, v1.CreateOptions) (*authv1.TokenReview, error) {
 	return &authv1.TokenReview{Status: authv1.TokenReviewStatus{
 		Authenticated: true,
 		User:          authv1.UserInfo{Username: "test"},
@@ -39,7 +42,7 @@ func NewFakeTokenReviewClient() FakeTokenReviewClient {
 type FakeTokenReviewClientUnauthenticated struct {
 }
 
-func (FakeTokenReviewClientUnauthenticated) Create(*authv1.TokenReview) (*authv1.TokenReview, error) {
+func (FakeTokenReviewClientUnauthenticated) Create(context.Context, *authv1.TokenReview, v1.CreateOptions) (*authv1.TokenReview, error) {
 	return &authv1.TokenReview{Status: authv1.TokenReviewStatus{
 		Authenticated: false,
 		User:          authv1.UserInfo{},
@@ -55,7 +58,7 @@ func NewFakeTokenReviewClientUnauthenticated() FakeTokenReviewClientUnauthentica
 type FakeTokenReviewClientError struct {
 }
 
-func (FakeTokenReviewClientError) Create(*authv1.TokenReview) (*authv1.TokenReview, error) {
+func (FakeTokenReviewClientError) Create(context.Context, *authv1.TokenReview, v1.CreateOptions) (*authv1.TokenReview, error) {
 	return nil, errors.New("failed to create token review")
 }
 
