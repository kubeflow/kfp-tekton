diff a/backend/src/cache/server/mutation.go b/backend/src/cache/server/mutation.go	(rejected hunks)
@@ -161,6 +161,24 @@ func MutatePodIfCached(req *v1beta1.AdmissionRequest, clientMgr ClientManagerInt
 			Path:  SpecContainersPath,
 			Value: dummyContainers,
 		})
+		node_restrictions, err := getEnvBool("CACHE_NODE_RESTRICTIONS")
+		if err != nil {
+			return nil, err
+		}
+		if !node_restrictions {
+			if pod.Spec.Affinity != nil {
+				patches = append(patches, patchOperation{
+					Op:   OperationTypeRemove,
+					Path: "spec/affinity",
+				})
+			}
+			if pod.Spec.NodeSelector != nil {
+				patches = append(patches, patchOperation{
+					Op:   OperationTypeRemove,
+					Path: "spec/nodeSelector",
+				})
+			}
+		}
 		if pod.Spec.InitContainers != nil || len(pod.Spec.InitContainers) != 0 {
 			patches = append(patches, patchOperation{
 				Op:   OperationTypeRemove,
@@ -220,7 +238,7 @@ func generateCacheKeyFromTemplate(template string) (string, error) {
 			"volumeMounts": nil,
 		},
 		"inputs":         nil,
-		"outputs":        nil,  // Output artifact/parameter names and paths are important and need to be considered. We can include the whole section since Argo does not seem to put the artifact s3 specifications here, leaving them in archiveLocation.
+		"outputs":        nil, // Output artifact/parameter names and paths are important and need to be considered. We can include the whole section since Argo does not seem to put the artifact s3 specifications here, leaving them in archiveLocation.
 		"volumes":        nil,
 		"initContainers": nil,
 		"sidecars":       nil,
@@ -264,7 +282,10 @@ func isKFPCacheEnabled(pod *corev1.Pod) bool {
 }
 
 func isTFXPod(pod *corev1.Pod) bool {
-	if pod.Labels[SdkTypeLabel] == TfxSdkTypeLabel {
+	// The label defaults to 'tfx', but is overridable.
+	// Official tfx templates override the value to 'tfx-template', so
+	// we loosely match the word 'tfx'.
+	if strings.Contains(pod.Labels[SdkTypeLabel], TfxSdkTypeLabel) {
 		return true
 	}
 	containers := pod.Spec.Containers
