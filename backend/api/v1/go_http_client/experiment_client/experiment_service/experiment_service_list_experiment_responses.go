// Code generated by go-swagger; DO NOT EDIT.

package experiment_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubeflow/pipelines/backend/api/v1/go_http_client/experiment_model"
)

// ExperimentServiceListExperimentReader is a Reader for the ExperimentServiceListExperiment structure.
type ExperimentServiceListExperimentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExperimentServiceListExperimentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExperimentServiceListExperimentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExperimentServiceListExperimentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExperimentServiceListExperimentOK creates a ExperimentServiceListExperimentOK with default headers values
func NewExperimentServiceListExperimentOK() *ExperimentServiceListExperimentOK {
	return &ExperimentServiceListExperimentOK{}
}

/*
ExperimentServiceListExperimentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ExperimentServiceListExperimentOK struct {
	Payload *experiment_model.V1ListExperimentsResponse
}

// IsSuccess returns true when this experiment service list experiment o k response has a 2xx status code
func (o *ExperimentServiceListExperimentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this experiment service list experiment o k response has a 3xx status code
func (o *ExperimentServiceListExperimentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this experiment service list experiment o k response has a 4xx status code
func (o *ExperimentServiceListExperimentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this experiment service list experiment o k response has a 5xx status code
func (o *ExperimentServiceListExperimentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this experiment service list experiment o k response a status code equal to that given
func (o *ExperimentServiceListExperimentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the experiment service list experiment o k response
func (o *ExperimentServiceListExperimentOK) Code() int {
	return 200
}

func (o *ExperimentServiceListExperimentOK) Error() string {
	return fmt.Sprintf("[GET /apis/v1/experiments][%d] experimentServiceListExperimentOK  %+v", 200, o.Payload)
}

func (o *ExperimentServiceListExperimentOK) String() string {
	return fmt.Sprintf("[GET /apis/v1/experiments][%d] experimentServiceListExperimentOK  %+v", 200, o.Payload)
}

func (o *ExperimentServiceListExperimentOK) GetPayload() *experiment_model.V1ListExperimentsResponse {
	return o.Payload
}

func (o *ExperimentServiceListExperimentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(experiment_model.V1ListExperimentsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExperimentServiceListExperimentDefault creates a ExperimentServiceListExperimentDefault with default headers values
func NewExperimentServiceListExperimentDefault(code int) *ExperimentServiceListExperimentDefault {
	return &ExperimentServiceListExperimentDefault{
		_statusCode: code,
	}
}

/*
ExperimentServiceListExperimentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ExperimentServiceListExperimentDefault struct {
	_statusCode int

	Payload *experiment_model.GooglerpcStatus
}

// IsSuccess returns true when this experiment service list experiment default response has a 2xx status code
func (o *ExperimentServiceListExperimentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this experiment service list experiment default response has a 3xx status code
func (o *ExperimentServiceListExperimentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this experiment service list experiment default response has a 4xx status code
func (o *ExperimentServiceListExperimentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this experiment service list experiment default response has a 5xx status code
func (o *ExperimentServiceListExperimentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this experiment service list experiment default response a status code equal to that given
func (o *ExperimentServiceListExperimentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the experiment service list experiment default response
func (o *ExperimentServiceListExperimentDefault) Code() int {
	return o._statusCode
}

func (o *ExperimentServiceListExperimentDefault) Error() string {
	return fmt.Sprintf("[GET /apis/v1/experiments][%d] ExperimentService_ListExperiment default  %+v", o._statusCode, o.Payload)
}

func (o *ExperimentServiceListExperimentDefault) String() string {
	return fmt.Sprintf("[GET /apis/v1/experiments][%d] ExperimentService_ListExperiment default  %+v", o._statusCode, o.Payload)
}

func (o *ExperimentServiceListExperimentDefault) GetPayload() *experiment_model.GooglerpcStatus {
	return o.Payload
}

func (o *ExperimentServiceListExperimentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(experiment_model.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
