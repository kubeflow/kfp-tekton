// Code generated by go-swagger; DO NOT EDIT.

package pipeline_upload_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubeflow/pipelines/backend/api/v1/go_http_client/pipeline_upload_model"
)

// PipelineServiceUploadPipelineVersionReader is a Reader for the PipelineServiceUploadPipelineVersion structure.
type PipelineServiceUploadPipelineVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PipelineServiceUploadPipelineVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPipelineServiceUploadPipelineVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPipelineServiceUploadPipelineVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPipelineServiceUploadPipelineVersionOK creates a PipelineServiceUploadPipelineVersionOK with default headers values
func NewPipelineServiceUploadPipelineVersionOK() *PipelineServiceUploadPipelineVersionOK {
	return &PipelineServiceUploadPipelineVersionOK{}
}

/*
PipelineServiceUploadPipelineVersionOK describes a response with status code 200, with default header values.

PipelineServiceUploadPipelineVersionOK pipeline service upload pipeline version o k
*/
type PipelineServiceUploadPipelineVersionOK struct {
	Payload *pipeline_upload_model.V1PipelineVersion
}

// IsSuccess returns true when this pipeline service upload pipeline version o k response has a 2xx status code
func (o *PipelineServiceUploadPipelineVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pipeline service upload pipeline version o k response has a 3xx status code
func (o *PipelineServiceUploadPipelineVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline service upload pipeline version o k response has a 4xx status code
func (o *PipelineServiceUploadPipelineVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pipeline service upload pipeline version o k response has a 5xx status code
func (o *PipelineServiceUploadPipelineVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline service upload pipeline version o k response a status code equal to that given
func (o *PipelineServiceUploadPipelineVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the pipeline service upload pipeline version o k response
func (o *PipelineServiceUploadPipelineVersionOK) Code() int {
	return 200
}

func (o *PipelineServiceUploadPipelineVersionOK) Error() string {
	return fmt.Sprintf("[POST /apis/v1/pipelines/upload_version][%d] pipelineServiceUploadPipelineVersionOK  %+v", 200, o.Payload)
}

func (o *PipelineServiceUploadPipelineVersionOK) String() string {
	return fmt.Sprintf("[POST /apis/v1/pipelines/upload_version][%d] pipelineServiceUploadPipelineVersionOK  %+v", 200, o.Payload)
}

func (o *PipelineServiceUploadPipelineVersionOK) GetPayload() *pipeline_upload_model.V1PipelineVersion {
	return o.Payload
}

func (o *PipelineServiceUploadPipelineVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_upload_model.V1PipelineVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineServiceUploadPipelineVersionDefault creates a PipelineServiceUploadPipelineVersionDefault with default headers values
func NewPipelineServiceUploadPipelineVersionDefault(code int) *PipelineServiceUploadPipelineVersionDefault {
	return &PipelineServiceUploadPipelineVersionDefault{
		_statusCode: code,
	}
}

/*
PipelineServiceUploadPipelineVersionDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PipelineServiceUploadPipelineVersionDefault struct {
	_statusCode int

	Payload *pipeline_upload_model.GooglerpcStatus
}

// IsSuccess returns true when this pipeline service upload pipeline version default response has a 2xx status code
func (o *PipelineServiceUploadPipelineVersionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this pipeline service upload pipeline version default response has a 3xx status code
func (o *PipelineServiceUploadPipelineVersionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this pipeline service upload pipeline version default response has a 4xx status code
func (o *PipelineServiceUploadPipelineVersionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this pipeline service upload pipeline version default response has a 5xx status code
func (o *PipelineServiceUploadPipelineVersionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this pipeline service upload pipeline version default response a status code equal to that given
func (o *PipelineServiceUploadPipelineVersionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the pipeline service upload pipeline version default response
func (o *PipelineServiceUploadPipelineVersionDefault) Code() int {
	return o._statusCode
}

func (o *PipelineServiceUploadPipelineVersionDefault) Error() string {
	return fmt.Sprintf("[POST /apis/v1/pipelines/upload_version][%d] PipelineService_UploadPipelineVersion default  %+v", o._statusCode, o.Payload)
}

func (o *PipelineServiceUploadPipelineVersionDefault) String() string {
	return fmt.Sprintf("[POST /apis/v1/pipelines/upload_version][%d] PipelineService_UploadPipelineVersion default  %+v", o._statusCode, o.Payload)
}

func (o *PipelineServiceUploadPipelineVersionDefault) GetPayload() *pipeline_upload_model.GooglerpcStatus {
	return o.Payload
}

func (o *PipelineServiceUploadPipelineVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(pipeline_upload_model.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
