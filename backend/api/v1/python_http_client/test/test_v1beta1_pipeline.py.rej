diff a/backend/api/v1beta1/python_http_client/test/test_v1beta1_pipeline.py b/backend/api/v1beta1/python_http_client/test/test_v1beta1_pipeline.py	(rejected hunks)
@@ -29,40 +29,40 @@ def tearDown(self):
         pass
 
     def make_instance(self, include_optional):
-        """Test ApiPipeline
+        """Test V1beta1Pipeline
             include_option is a boolean, when False only required
             params are included, when True both required and
             optional params are included """
-        # model = kfp_server_api.models.api_pipeline.ApiPipeline()  # noqa: E501
+        # model = kfp_server_api_v1beta1.models.v1beta1_pipeline.V1beta1Pipeline()  # noqa: E501
         if include_optional :
-            return ApiPipeline(
+            return V1beta1Pipeline(
                 id = '0', 
                 created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                 name = '0', 
                 description = '0', 
                 parameters = [
-                    kfp_server_api.models.api_parameter.apiParameter(
+                    kfp_server_api_v1beta1.models.v1beta1_parameter.v1beta1Parameter(
                         name = '0', 
                         value = '0', )
                     ], 
-                url = kfp_server_api.models.api_url.apiUrl(
+                url = kfp_server_api_v1beta1.models.v1beta1_url.v1beta1Url(
                     pipeline_url = '0', ), 
                 error = '0', 
-                default_version = kfp_server_api.models.api_pipeline_version.apiPipelineVersion(
+                default_version = kfp_server_api_v1beta1.models.v1beta1_pipeline_version.v1beta1PipelineVersion(
                     id = '0', 
                     name = '0', 
                     created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                     parameters = [
-                        kfp_server_api.models.api_parameter.apiParameter(
+                        kfp_server_api_v1beta1.models.v1beta1_parameter.v1beta1Parameter(
                             name = '0', 
                             value = '0', )
                         ], 
                     code_source_url = '0', 
-                    package_url = kfp_server_api.models.api_url.apiUrl(
+                    package_url = kfp_server_api_v1beta1.models.v1beta1_url.v1beta1Url(
                         pipeline_url = '0', ), 
                     resource_references = [
-                        kfp_server_api.models.api_resource_reference.apiResourceReference(
-                            key = kfp_server_api.models.api_resource_key.apiResourceKey(
+                        kfp_server_api_v1beta1.models.v1beta1_resource_reference.v1beta1ResourceReference(
+                            key = kfp_server_api_v1beta1.models.v1beta1_resource_key.v1beta1ResourceKey(
                                 type = 'UNKNOWN_RESOURCE_TYPE', 
                                 id = '0', ), 
                             name = '0', 
@@ -70,8 +70,8 @@ def make_instance(self, include_optional):
                         ], 
                     description = '0', ), 
                 resource_references = [
-                    kfp_server_api.models.api_resource_reference.apiResourceReference(
-                        key = kfp_server_api.models.api_resource_key.apiResourceKey(
+                    kfp_server_api_v1beta1.models.v1beta1_resource_reference.v1beta1ResourceReference(
+                        key = kfp_server_api_v1beta1.models.v1beta1_resource_key.v1beta1ResourceKey(
                             type = 'UNKNOWN_RESOURCE_TYPE', 
                             id = '0', ), 
                         name = '0', 
